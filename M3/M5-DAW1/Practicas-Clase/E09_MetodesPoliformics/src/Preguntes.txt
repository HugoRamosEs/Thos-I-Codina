Suposem la superclase Vehicle que representa a qualsevol mena de vehicle i la subclasse Taxi que representa a una mena de vehicle concret.

a) Un objecte de tipus estàtic declarat Taxi pot contenir a un objecte Vehicle en temps d'execució?
   Si es possible, ja que Taxi es una classe filla de Vehicle. Si creem un objecte Taxi, aquest es podra igualar a un objecte Vehicle, perque Taxi es
   un tipus de Vehicle i per tant, hereta tot el necessari (atributs i métodes) per instanciar un objecte Vehicle correctament, ja que només necessita
   la matricula i el numeroDeRodes. Exemple:
   		Taxi taxi = new Taxi("0000BBB", 4, "Hugo Ramos", 4);
        Vehicle vehicle = taxi;

b) Un objecte de tipus estàtic declarat Vehicle pot contenir a un objecte Taxi en temps d'execució?
   No es possible, perque tot i que Taxi es una classe filla de Vehicle i per tant hereta tot el que conté, alhora de igualar ambdos objectes
   no es pot igualar un objecte Vehicle instanciat a un objecte Taxi, degut a que l'objecte Vehicle no conta amb tots els atributs que necessita
   el constructor de l'objecte Taxi, que serien nomDeConductor i numeroDePlaces. Exemple:
   		Vehicle vehicle = new Vehicle("0000BBB", 4);
        Taxi taxi = vehicle;

e) Escriu el codi d'una classe Main amb el mètode main que creï un objecte el tipus del qual és Vehicle, instanciat com a Taxi. Estableix valors per 
   als seus atributs i crida el mètode toString(). Quin mètode toString() resulta d'aplicació, el propi de la classe Vehicle o el propi de la classe Taxi?
   Per què?
   El métode toString() que resulta d'aplicació es el del instanciat. En aquest cas com hem instanciat un objecte Vehicle, pero es de tipus Taxi, llavors
   fará servir el métode toString() de Taxi.

g) En el mètode obtenirCostCompra() puc fer: return 21000+super.obtenirCostCompra()?
   Si es possible, per ha de ser en la classe Taxi. Es posible perque Taxi com es fill de cotxe, hereta el metode obtenirCostCompra() de Vehicle. Exemple:
   		public int obtenirCostCompra() {
		return super.obtenirCostCompra() + 21000;
	}
    


