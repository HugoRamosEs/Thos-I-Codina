COPIA SUPERFICIAL (NO HACE FALTA):
Class A{
	public $a;
	
	public function __construct (a){
		$this->a = a;
	}
	
	public function __clone{
		$copia = new self();
		$copia->a = $this->a
	}
}

COPIA SUPERFICIAL (BIEN):
Class A{
	public $a
	public $b
	
	public function __construct (a){
		$this->a = a;
	}
	
	public function __clone{
		$this->a = null
	}
	
	// Se clonan todos los atributos, pero se pueden asignar los que quieras a null. Por defecto el metodo clone hace copias superficiales.
}

COPIA PROFUNDA:
Class A{
	public $a;
	
	public function __construct (a){
		$this->a = a;
	}
	
	public function __clone{
		$copia = new self();
		$copia->$a = $this->a->__clone();
	}
}

DEFINIR AUTOLOAD DE FORMA ANONIMA (Esto se hace directamente en el index.php):
spl_autoload_register(function($className) {
    // Definición de las carpetas donde buscar las clases
    $carpetes = ["model", "vista", "controlador", "config"];

    foreach ($carpetes as $carpeta) {
        $file = "classes/$carpeta/" . strtolower($className) . ".class.php";
        if (file_exists($file)) {
            include $file;
            return;
        }
    }
});

spl_autoload_register(function($className) {
    // Definición de las carpetas donde buscar las clases
    $carpetes = ["model", "vista", "controlador", "config"];

    foreach ($carpetes as $carpeta) {
        $file = "classes/$carpeta/$className.php";
        if (file_exists($file)) {
            include $file;
            return;
        }
    }
    throw new Exception("No se pudo cargar la clase: $className");
});

MIRAR DATOS EN EL INDEX.HTML SIN EL FRONTCOTROLLER:
Para mirar variables, hay que comentar el cFront y poner lo siguiente:
	$variable;
	echo "<pre>";
	var_dump($variable);
	echo "</pre>";


- PHP no puede tener herencia multiple.
- Todos los métodos mágicos estan en Object, como en JAVA.
- __invoke (método mágico) para llamar a un objeto tras ser utilizado.
- Para crear una página dinámica, no es necesario utilizar el FrontController.